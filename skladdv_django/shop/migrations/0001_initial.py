# Generated by Django 3.2.3 on 2022-04-12 12:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='shop.category', verbose_name='родительская категория')),
            ],
            options={
                'verbose_name': 'Категории товаров',
                'verbose_name_plural': 'Категории товаров',
            },
        ),
        migrations.CreateModel(
            name='Good',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='название')),
                ('price', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='цена')),
                ('storage_quantity', models.PositiveIntegerField(null=True, verbose_name='свободное кол-во на складе')),
                ('unit', models.CharField(choices=[('кг', 'килограммы'), ('шт', 'штуки')], max_length=2, verbose_name='ед. измерения')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='время создания')),
                ('available_for_order', models.BooleanField(default=True, verbose_name='продается')),
                ('artikul', models.CharField(max_length=100, verbose_name='артикул')),
                ('photo', models.ImageField(null=True, upload_to='', verbose_name='фото')),
                ('category', mptt.fields.TreeForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='goods', to='shop.category', verbose_name='категория')),
            ],
            options={
                'verbose_name': 'Товары',
                'verbose_name_plural': 'Товары',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('создан', 'создан'), ('заказан', 'заказан'), ('собран', 'собран'), ('отгружен', 'отгружен'), ('исполнен', 'исполнен'), ('отменен', 'отменен')], default='создан', max_length=20, verbose_name='статус')),
                ('positions', models.PositiveIntegerField(verbose_name='кол-во позиций')),
                ('total_coast', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Сумма заказа')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='время создания')),
                ('qr_code', models.TextField(max_length=1000, null=True, verbose_name='QR-код')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='покупатель')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Клиентские заказы',
            },
        ),
        migrations.CreateModel(
            name='OrderItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_price', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Сумма по позиции')),
                ('position_quantity', models.PositiveIntegerField(verbose_name='кол-во товара в позиции')),
                ('good', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.good', verbose_name='товар')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='shop.order', verbose_name='заказ')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Детализация заказов',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='юридическое название')),
                ('inn', models.CharField(max_length=200, null=True, verbose_name='ИНН')),
                ('ogrn', models.CharField(max_length=200, null=True, verbose_name='ОГРН')),
                ('address', models.CharField(max_length=200, verbose_name='адрес')),
                ('contact_person', models.CharField(max_length=200, verbose_name='контактное лицо')),
                ('telephone', models.CharField(max_length=200, verbose_name='телефон')),
                ('email', models.EmailField(max_length=100, verbose_name='почта')),
                ('is_actual', models.BooleanField(default=True, verbose_name='действующий')),
            ],
            options={
                'verbose_name': 'Поставщика',
                'verbose_name_plural': 'Поставщики',
            },
        ),
        migrations.CreateModel(
            name='Supply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='время создания')),
                ('status', models.CharField(choices=[('заказана', 'заказана'), ('поступила', 'поступила на склад')], default='заказана', max_length=20, verbose_name='статус')),
                ('total_positions', models.PositiveIntegerField(verbose_name='кол-во позиций')),
                ('total_purchase_price', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='сумма поставки')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='shop.order', verbose_name='номер заказа')),
            ],
            options={
                'verbose_name': 'Поставку',
                'verbose_name_plural': 'Поставки',
            },
        ),
        migrations.CreateModel(
            name='SupplyItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='кол-во')),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='цена закупа')),
                ('total_purchase_price', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='сумма поставки')),
                ('status', models.CharField(choices=[('создана', 'создана'), ('отменена', 'отменена'), ('поступила', 'поступила на склад')], default='заказана', max_length=20, verbose_name='статус')),
                ('good', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.good', verbose_name='товар')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='shop.order', verbose_name='номер заказа')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.supplier', verbose_name='поставщик')),
                ('supply', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.supply', verbose_name='номер поставки')),
            ],
            options={
                'verbose_name': 'Позицию поставки',
                'verbose_name_plural': 'Позиции поставок',
            },
        ),
        migrations.CreateModel(
            name='Reserve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='резерв')),
                ('is_actual', models.BooleanField(default=True, verbose_name='актуальность')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='время создания')),
                ('good', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.good', verbose_name='товар')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='shop.order', verbose_name='заказ')),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.orderitems', verbose_name='Позиция в заказе')),
            ],
            options={
                'verbose_name': 'Резерв',
                'verbose_name_plural': 'Резерв',
            },
        ),
        migrations.CreateModel(
            name='PurchasePrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='цена закупа')),
                ('good', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.good', verbose_name='товар')),
                ('supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='shop.supplier', verbose_name='поставщик')),
            ],
            options={
                'verbose_name': 'Закупочную цену',
                'verbose_name_plural': 'Закупочные цены',
            },
        ),
        migrations.AddField(
            model_name='good',
            name='suppliers',
            field=models.ManyToManyField(to='shop.Supplier', verbose_name='поставщики'),
        ),
    ]
